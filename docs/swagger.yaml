openapi: 3.0.2
info:
    title: Tickets-API
    version: 1.0.0
    description: '### This is a Swagger UI for our Tickets API'
paths:
    /tickets:
        summary: Get a list of all tickets
        description: Returns a list of all different type of tickets in API
        get:
            tags:
                - tickets
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of tickets:
                                    value:
                                        - Avatar
                                        - Top gun
                    description: Returns a list of tickets
            summary: Get a list of all tickets
            description: Returns a list of all different type of tickets in API
        post:
            tags:
                - tickets
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Tickets:
                                    value:
                                        name: Top gun
                                        cast: Tom Cruise
                                        price: 5
                                        _id: 633ff64bcd135ea44ed447ff
                                        __v: 0
            summary: Add a ticket to the list of tickets
            description: Add a ticket to the api
    /locations:
        summary: Get a list of all the locations where tickets are being sold.
        description: Return a list of all locations where tickers are being sold.
        get:
            tags:
                - locations
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of locations:
                                    value: '["Tallinn","Tartu"])'
                    description: Returns a list of locations where tickets are being sold.
            summary: Get a list of all the locations where tickets are being sold.
            description: Return a list of all locations where tickets are being sold.
        post:
            tags:
                - locations
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Locations:
                                    value:
                                        country: Estonia
                                        city: Tartu
                                        street: Aida
                                        _id: 632d92439aa994257e0d0943
                                        __v: 0
                    description: Adds a location to the list of locations
            summary: Add a location to the list
            description: Add a location to the api.
    '/tickets/{id}':
        get:
            tags:
                - details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of tickets:
                                    value: '  {id: 1, name: "Top gun", cast: "Tom Cruise, Jennifer Connelly, Jon Hamm", price: 15.99},'
                    description: Returns full details of a given id ticket
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Ticket /w+ was not found:
                                    value: ' Ticket \\w+ was not found in ticket array.'
                    description: Ticket was not found in tickets array
            operationId: id
            summary: Get full details of the tickets
            description: Returns full details of a given id ticket
        put:
            tags:
                - tickets
            responses:
                '200': {}
            summary: Update a certain ticket by id.
            description: Update a certain ticket's details if needed by id
        delete:
            tags:
                - tickets
            responses:
                '200': {}
            summary: Delete a certain ticket.
            description: Delete a certain ticket by id from the list
    '/locations/{id}':
        get:
            tags:
                - details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a locations:
                                    value: "{ id: 1, country: \"Estonia\", city: \"Tallinn\", street: \"Solaris\" },\r\n{ id: 2, country: \"Estonia\", city: \"PÃ¤rnu\", street: \"Saku\" },"
                    description: Returns full details of a given location
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Location /w+ was not found:
                                    value: Location \\w+ was not found in game array
                    description: Location was not found in locations array
            operationId: id
            summary: Get full details of locations
            description: Returns full details of a given location
        put:
            tags:
                - locations
            responses:
                '200': {}
            summary: Update a certain location by id.
            description: 'Update the country,city,street if needed on locations'
        delete:
            tags:
                - locations
            responses:
                '200': {}
            summary: Delete a certain location.
            description: Delete a certain location by id from the list.
    /actors:
        summary: Get a list of all the performers.
        description: Returns a list of all performers in API
        get:
            tags:
                - actors
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of performers:
                                    value:
                                        - Luciano Pavarotti
                                        - Hortus Musicus
                    description: Return a list of actors.
            summary: Get a list of all the actors.
            description: Returns a list of all actors in API
        post:
            tags:
                - actors
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Actors:
                                    value:
                                        name: Peeter
                                        gender: Male
                                        age: 51
                                        _id: 633ff536cd135ea44ed447fb
                                        __v: 0
                    description: Adds a actor to the list of actors
            summary: Add a actor to the list
            description: Add a actor to the api.
    '/actors/{id}':
        get:
            tags:
                - details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of actors:
                                    value: "{ id: 1, name: \"Tom Cruise\", gender: \"Male\", age: 60 },\r\n{ id: 2, name: \"Emma Roberts\", gender: \"Female\", age: 31 },"
                    description: Returns full details of a given performer
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Performer/w+  was not found ':
                                    value: Performer \\w+ was not found in game array.
                    description: Performer was not found in performers array
            operationId: id
            summary: Get full details of performers
            description: Returns full details of a given performer
        put:
            tags:
                - actors
            responses:
                '200': {}
            summary: Update a certain actor by id.
            description: Update a certain actor's details if needed by id.
        delete:
            tags:
                - actors
            responses:
                '200': {}
            summary: Delete a certain actor.
            description: Delete a certain actor by id from the list.
    /login:
        summary: Show the login page
        description: Show the login page
        get:
            tags:
                - login
            responses:
                '302':
                    headers:
                        Location:
                            schema:
                                type: string
                            examples:
                                Location:
                                    value: admin
                        'Set-Cookie:':
                            schema:
                                type: string
                            examples:
                                JWT:
                                    value: >-
                                        jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzNDAwMDg4MWIxZjVlZDFmYWQ3OGU5OSIsImlhdCI6MTY2Njk1MjQ4MCwiZXhwIjoxNjY3MjExNjgwfQ.IFNnXuPz28E253xbCrko1QQIJQ0wJneNGAprCRIcQuA;
                                        Max-Age=259200; Path=/; Expires=Mon, 31 Oct 2022 10:21:20 GMT;
                                        HttpOnly
                    description: 'Logged in '
                '400':
                    content:
                        application/json:
                            examples:
                                '{"errors":{"email":"Incorrect email or password","password":""}}':
                                    value:
                                        errors:
                                            email: Incorrect email or password
                                            password: ''
                    description: Bad request
            summary: Show the login page
            description: Show the login page
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message
