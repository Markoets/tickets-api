<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>
    <%= title %>
  </title>

  <% /* Place any styles in the page in this section. */ %>
    <link rel="stylesheet" href="main.css">
</head>

<body>
  <div id="app">
  <header>
    <%- include('./partials/mainHeader.ejs') %>
  </header>
  
    <%- body %>
  </div>
  <footer>
    <% /* Define an optional placeholder for the footer. If a page doesn't define a footer, this section will simply be
      empty. */ %>
      <%- defineContent('footer') %>
  </footer>

  <% /* Place any scripts contained in views at the end of the page. */ %>
    <%- script %>

      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8"
        crossorigin="anonymous"></script>
      <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

      <script type="module">
        import { createApp } from 'https://unpkg.com/vue@3/dist/vue.esm-browser.js'

        createApp({
          data() {
            return {
              token: "",
              InModal: {},
              locations: [],
              actors: [],
              locations2:[],
              tickets:[]
            }
          },
          async created() {
            console.log("tickets");
            const url = window.location.href
            console.log(url + 's');
          //  this.locations = await (await fetch(`${url}s`)).json();
            this.locations2 = await (await fetch(`http://localhost:8088/locations`)).json();
            this.actors = await (await fetch(`http://localhost:8088/actors`)).json();
            this.tickets = await (await fetch(`http://localhost:8088/tickets`)).json();
          },
          methods: {
            getLocation: async function (id) {
              const url = window.location.href
              this.InModal = await (await fetch(`${url}s/${id}`)).json()
              console.log(this.InModal);
              console.log('/${id}');
              const InfoModal = new bootstrap.Modal(document.getElementById('locationInfoModal'), {})
              InfoModal.show()
            },
            deleteItem: async function (location) {
              let requestOptions = {
                method: "DELETE",
                headers: { "Content-Type": "application/json" },
              }

              const response = await fetch("/delete/:id", requestOptions); // <----- HERE! 
              if (response.status != 204) {
                throw Error("Cannot delete your item from list");
              }
              return location;
            }, myFunction() {
              // Declare variables
              // var input, filter, table, tr, td, i, txtValue;
              // input = document.getElementById("myInput");
              // filter = input.value.toUpperCase();
              // table = document.getElementById("ticketsTable");
              // tr = table.getElementsByTagName("tr");

              // Loop through all table rows, and hide those who don't match the search query
              // for (i = 0; i < tr.length; i++) {
              //   td = tr[i].getElementsByTagName("td")[0];
              //   if (td) {
              //     txtValue = td.textContent || td.innerText;
              //     if (txtValue.toUpperCase().indexOf(filter) > -1) {
              //       tr[i].style.display = "";
              //     } else {
              //       tr[i].style.display = "none";
              //     }
              //   }
              // }
            }
          }
        }).mount('#app')
      </script>



</body>

</html>